import { Logger } from '../logger';
import { int, float } from '../lang';


export class Strategy {
    constructor() {
        this.logger = new Logger();

    }

    doOperation(num1:int, num2:int) {
        throw new Error("Abstract method!");
    }
}
export class Context {
    constructor(strategy:Strategy) {
        this.strategy = strategy;
    }

    executeStrategy(num1:int, num2:int) {
        return this.strategy.doOperation(num1, num2);
    }

}
export class OperationAdd extends Strategy {
    doOperation(num1:int, num2:int) {
        this.logger.log("add of operation" + ':' + (num1 + num2).toString());

    }
}

export class OperationSubstract extends Strategy {
    doOperation(num1:int, num2:int) {
        this.logger.log('sub of operation' + ':' + (num1 - num2).toString());
    }
}

export class OperationMultiply extends Strategy {
    doOperation(num1:int, num2:int) {
        this.logger.log('multiply of operation' + ':' + (num1 * num2).toString());
    }
}

